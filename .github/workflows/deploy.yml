name: Deploy Infrastructure to AWS using Terraform

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: eu-north-1
      DOMAIN: mypodsix.online
      EMAIL: okoro.christianpeace@gmail.com
      TF_DIR: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Add SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Terraform Init
        working-directory: ${{ env.TF_DIR }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ env.TF_DIR }}
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        id: apply
        working-directory: ${{ env.TF_DIR }}
        run: terraform apply -auto-approve tfplan

      - name: Get Terraform Outputs
        id: tfoutput
        working-directory: ${{ env.TF_DIR }}
        run: |
          echo "WEB_IP=$(terraform output -raw web_server_public_ip)" >> $GITHUB_ENV
          echo "PROXY_IP=$(terraform output -raw reverse_proxy_public_ip)" >> $GITHUB_ENV
          echo "ECR_REPO_URL=$(terraform output -raw ecr_repo_url)" >> $GITHUB_ENV

      - name: Login to AWS ECR
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
          ECR_REPO_URL: ${{ env.ECR_REPO_URL }}
        run: |
          # Strip whitespace from secrets
          AWS_ACCESS_KEY_ID=$(echo "$AWS_ACCESS_KEY_ID" | tr -d '[:space:]')
          AWS_SECRET_ACCESS_KEY=$(echo "$AWS_SECRET_ACCESS_KEY" | tr -d '[:space:]')
          export AWS_ACCESS_KEY_ID
          export AWS_SECRET_ACCESS_KEY

          echo "Logging into ECR: $ECR_REPO_URL"
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REPO_URL

      - name: Build and push Docker image
        run: |
          docker build -t mediplus-app .
          docker tag mediplus-app:latest $ECR_REPO_URL:latest
          docker push $ECR_REPO_URL:latest

      - name: Wait for infrastructure to stabilize
        run: |
          echo "Waiting 3 minutes for EC2 instances to finish booting..."
          sleep 180

      - name: Run deploy script on reverse proxy
        run: |
          echo "Copying deploy.sh to reverse proxy..."
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa scripts/deploy.sh ubuntu@${PROXY_IP}:/home/ubuntu/
          echo "Running deployment remotely..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@${PROXY_IP} \
            "ECR_REPO_URL='${ECR_REPO_URL}' bash /home/ubuntu/deploy.sh"



      
     
