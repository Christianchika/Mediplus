name: Deploy Mediplus to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: eu-north-1
  APP_NAME: mediplus
  ECR_REPO_NAME: mediplus-app
  DOMAIN: mypodsix.online
  TF_DIR: terraform

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # -------------------------------
      # Checkout code
      # -------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: false  # avoids leftover submodule errors

      # -------------------------------
      # Configure AWS credentials (for Terraform & ECR push)
      # -------------------------------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      # -------------------------------
      # Setup Terraform
      # -------------------------------
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      # -------------------------------
      # Terraform Init & Apply
      # -------------------------------
      - name: Terraform Init & Apply
        working-directory: ${{ env.TF_DIR }}
        run: |
          terraform init
          terraform apply -auto-approve

      # -------------------------------
      # Fetch Terraform Outputs
      # -------------------------------
      - name: Get Terraform Outputs
        id: tfoutput
        working-directory: ${{ env.TF_DIR }}
        run: |
          echo "WEB_IP=$(terraform output -raw web_server_public_ip)" >> $GITHUB_ENV
          echo "PROXY_IP=$(terraform output -raw reverse_proxy_public_ip)" >> $GITHUB_ENV
          echo "ECR_REPO_URL=$(terraform output -raw ecr_repo_url)" >> $GITHUB_ENV

      # -------------------------------
      # Login to ECR and Push Docker Image
      # -------------------------------
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image
        run: |
          ECR_URL="${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPO_NAME }}"
          echo "ECR_URL=$ECR_URL" >> $GITHUB_ENV

          docker build -t $ECR_URL:latest .
          docker push $ECR_URL:latest

      # -------------------------------
      # SSH to Reverse Proxy and Deploy
      # -------------------------------
      - name: Prepare SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > id_rsa
          chmod 600 id_rsa

      - name: Deploy on Reverse Proxy
        env:
          ECR_REPO_URL: ${{ env.ECR_REPO_URL }}
          DOMAIN: ${{ env.DOMAIN }}
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          scp -o StrictHostKeyChecking=no -i id_rsa scripts/deploy.sh ubuntu@${PROXY_IP}:/home/ubuntu/deploy.sh
          ssh -o StrictHostKeyChecking=no -i id_rsa ubuntu@${PROXY_IP} \
            "ECR_REPO_URL='${ECR_REPO_URL}' AWS_DEFAULT_REGION='${AWS_REGION}' DOMAIN='${DOMAIN}' bash /home/ubuntu/deploy.sh"


      
     
